name: Build and Publish C# Executable (No SonarQube)

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to build from'
        required: true
        default: 'master'
      build_configuration:
        description: 'Build configuration (e.g., Debug, Release)'
        required: true
        default: 'Release'
      target_runtime:
        description: 'Target runtime identifier (e.g., win-x64)'
        required: true
        default: 'win-x64'
        type: choice
        options:
          - win-x64

jobs:
  build-publish:
    name: Build and publish C# app
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.target_branch }}

      - name: Restore NuGet packages
        shell: powershell
        run: |
          Write-Host "Running dotnet restore for AssemblyTool.sln..."
          dotnet restore AssemblyTool.sln --verbosity normal
          if ($LASTEXITCODE -ne 0) {
              throw "dotnet restore failed. Exit code: $LASTEXITCODE"
          }
          Write-Host "dotnet restore completed successfully."

      - name: Build Project
        shell: powershell
        run: |
          Write-Host "Building AssemblyTool.sln with configuration ${{ github.event.inputs.build_configuration }}..."
          dotnet build AssemblyTool.sln `
            --configuration ${{ github.event.inputs.build_configuration }} `
            --no-restore `
            --verbosity normal
          if ($LASTEXITCODE -ne 0) {
              throw "dotnet build failed. Exit code: $LASTEXITCODE"
          }
          Write-Host "dotnet build completed successfully."

      - name: Publish C# application for Windows x64
        shell: powershell
        run: |
          Write-Host "Publishing AssemblyTool/AssemblyTool.csproj for Windows x64..."
          # !!! 再次确认 'AssemblyTool/AssemblyTool.csproj' 是你的主可执行项目文件路径
          dotnet publish AssemblyTool/AssemblyTool.csproj `
            --configuration ${{ github.event.inputs.build_configuration }} `
            --output publish/${{ github.event.inputs.target_runtime }} `
            --runtime ${{ github.event.inputs.target_runtime }} `
            --self-contained true `
            /p:PublishSingleFile=true `
            /p:TrimUnusedAssemblies=true `
            --verbosity normal
          if ($LASTEXITCODE -ne 0) {
              throw "dotnet publish failed. Exit code: $LASTEXITCODE"
          }
          Write-Host "dotnet publish completed successfully."

      - name: Upload ${{ github.event.inputs.target_runtime }} Executable
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.target_runtime }}-executable
          path: publish/${{ github.event.inputs.target_runtime }}
