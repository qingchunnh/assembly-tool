# .github/workflows/build.yml

name: Build with Cake

# 触发工作流的事件
on:
  # 当有代码推送到 master 分支时触发
  push:
    branches:
      - master
  # 允许在 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

jobs:
  build:
    name: Build Project using Cake
    # 在最新的 Windows 环境中运行
    runs-on: windows-latest

    steps:
      # 第一步：检出代码
      # 这是所有工作流的基础，它将你的仓库代码下载到运行器中。
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 获取所有历史记录，这对于某些构建工具（如 GitVersion）很有用
          fetch-depth: 0

      # 第二步：安装 .NET 9 SDK
      # 遵循文档要求，安装指定版本的 .NET SDK。
      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      # 第三步：执行 Cake 构建脚本
      # 这一步模拟了 "在 IDE 中运行 builder project" 的过程。
      # 我们使用 .NET Core Global Tool 的方式来运行 Cake。
      - name: Run Cake build script
        shell: pwsh
        run: |
          # 安装 Cake 工具。它是一个 .NET 全局工具，用于执行 .cake 脚本。
          dotnet tool install --global Cake.Tool
          # 执行构建。Cake 会自动在仓库根目录查找并运行 build.cake 脚本。
          dotnet cake

      # 第四步：上传构建产物
      # 遵循文档说明，将 Build 目录下的产物打包上传。
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          # 上传后在 GitHub Actions 页面显示的名字
          name: build-output
          # 需要上传的目录路径，对应文档中的 `solutionDir\Build`
          path: Build/
