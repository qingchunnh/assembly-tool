# 工作流名称
name: .NET Publish and Package

# 触发工作流的事件
on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ "main" ]
  # 当有 pull request 指向 main 分支时触发
  pull_request:
    branches: [ "main" ]
  # 允许您在 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

# 定义一个或多个作业（job）
jobs:
  build-and-publish:
    # 指定作业运行的虚拟机环境
    runs-on: windows-latest

    steps:
    # 第一步：检出（下载）你的仓库代码到虚拟机
    - name: Checkout repository
      uses: actions/checkout@v4

    # 第二步：安装和设置 .NET SDK 环境
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x # 保持与你项目匹配的版本

    # 第三步：还原 NuGet 包依赖
    - name: Restore dependencies
      run: dotnet restore AssemblyTool.sln

    # 第四步：发布项目 (这是关键的改动)
    # 在命令末尾添加 /p:PublishSingleFile=false 来禁用单文件发布
    - name: Publish project
      run: dotnet publish AssemblyTool.sln --configuration Release --no-restore --output ./publish /p:PublishSingleFile=false

    # 第五步：上传发布产物
    - name: Upload publish artifacts
      uses: actions/upload-artifact@v4
      with:
        # 上传的产物包名称
        name: published-application
        # 要上传的文件路径
        path: ./publish
        # 产物保留天数
        retention-days: 7
