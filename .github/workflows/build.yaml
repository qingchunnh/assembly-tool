# 工作流名称
name: .NET Self-Contained Publish

# 触发工作流的事件
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-publish:
    # 指定作业运行的虚拟机环境
    runs-on: windows-latest

    steps:
    # 第一步：检出（下载）你的仓库代码到虚拟机
    - name: Checkout repository
      uses: actions/checkout@v4

    # 第二步：安装和设置 .NET SDK 环境
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        # 注意：错误日志显示你在使用 .NET 9 SDK，这里保持一致
        # 如果你的项目是 .NET 8，请改为 8.0.x
        dotnet-version: 8.0.x 

    # 第三步：还原 NuGet 包依赖 (这是关键的改动)
    # 在 restore 命令中就指定 runtime，为独立发布做准备
    - name: Restore dependencies for specific runtime
      run: dotnet restore AssemblyTool.sln --runtime win-x64

    # 第四步：构建整个解决方案
    # 这一步确保所有项目（包括.NET Framework的）都被正确编译
    - name: Build solution
      run: dotnet build AssemblyTool.sln --configuration Release --no-restore

    # 第五步：发布主项目为独立的单个可执行文件
    - name: Publish main project as a single executable
      run: >
        dotnet publish AssemblyTool/AssemblyTool.csproj
        --configuration Release
        --runtime win-x64
        --self-contained true
        /p:PublishSingleFile=true
        /p:IncludeNativeLibrariesForSelfExtract=true
        --output ./publish
        --no-build

    # 第六步：上传发布产物
    - name: Upload publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Standalone-Executable-win-x64
        path: ./publish
        retention-days: 7
